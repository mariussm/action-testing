name: Test

# Controls when the workflow will run
on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow the action to get the required token
permissions:
  id-token: write
  contents: read

# Our Azure environment that we want to sign into
env:
  CLIENT_ID: 8e80a94d-b9bc-48ed-8c68-7ebcf3f1e26a
  TENANT_ID: 95877aab-f66b-4cd0-98a0-1218634664fa
  SUBSCRIPTION_ID: cf52a112-fbee-4377-807b-cca5820bc0af

jobs: 
  Test:
      runs-on: windows-latest
      steps:
        # Get users from Azure AD using access token provided by Azure CLI
        - name: 'Get graph access token'
          uses: azure/powershell@v1
          with:
            inlineScript: |
              # Get JWT from GitHub
              $audience = "api://AzureADTokenExchange"
              $url = "{0}&resource={1}" -f $ENV:ACTIONS_ID_TOKEN_REQUEST_URL, $audience
              $githubjwt = Invoke-RestMethod $url -Headers @{Authorization = ("bearer {0}" -f $ENV:ACTIONS_ID_TOKEN_REQUEST_TOKEN)}
              
              Write-Host "GitHub JWT url: $url"

              Write-Host "GitHub JWT payload:"
              # Fix padding characters
              $payload = ($githubjwt.Value -split "\.")[1]
              if(($payload.Length % 4) -ne 0) {
                $payload = $payload.PadRight($payload.Length + 4 - ($payload.Length % 4), "=")
              }

              # Print pretty
              [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($payload)) | convertfrom-json | convertto-json
            azPSVersion: "latest"